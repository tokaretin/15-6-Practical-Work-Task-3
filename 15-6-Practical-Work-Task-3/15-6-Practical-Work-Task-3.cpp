/*Задача 3
Что нужно сделать
С клавиатуры вводятся числа. Когда пользователь вводит «-1»,  
необходимо выводить на экран пятое по возрастанию число среди введённых. 
Когда пользователь вводит «-2», программа завершает работу.

Пример:

ввод: 7 5 3 1 2 4 6 -1
вывод: 5 (в отсортированном виде массив выглядит так: {1,2,3,4,5,6,7})
ввод: 1 1 1 -1
вывод: 2 (в отсортированном виде массив выглядит так: {1,1,1,1,2,3,4,5,6,7})
ввод -2
завершение программы

Советы и рекомендации
Нужно удостовериться, что можно вывести требуемое число (может быть меньше пяти чисел).

3. На доработку. Решение рабочее, но не оптимальное(представьте, что входных данных миллионы значений, 
зачем сортировать весь миллион значений, если нас интересует только 5тый элемент). Т.к. этот модуль на алгоритмы, 
давайте пробовать оптимизировать решение.  Для решения этой задачи достаточно иметь массив только на 5 элементов
(сразу выделенный такого размера и заполненный нулями при старте) и нужно "вставлять" новый элемент в эти 5 , 
если он меньше максимального. А иначе новое число можно отбрасывать и ничего не сортировать и не двигать. 
Причем, если при вставке сразу вставлять его в "правильное место", то от сортировки можно вообще отказаться (остается только сдвиг).*/
#include <iostream>
#include <algorithm>

int main()
{
    const int maxSize = 5;
    int arr[maxSize] = { 0 }; // Массив из 5 элементов, инициализированный нулями
    int currentIndex = 0;     // Текущий индекс для вставки

    while (true)
    {
        int input;
        std::cout << "Input the numbers: ";
        std::cin >> input;

        if (input == -2)
        {
            std::cout << "Vector numbers: ";
            for (int i = 0; i < maxSize; i++)
            {
                std::cout << arr[i] << " ";
            }

            break; // Завершение программы при вводе -2
        }

        else if (input == -1)
        {
            if (currentIndex >= 5)
            {
                std::sort(arr, arr + maxSize); // После ввода всех элементов, сортируем только первые 5 по возрастанию
                std::cout << "Fifth highest increase in number: " << arr[4] << std::endl; // Пятое по возрастанию число
            }
            else
            {
                std::cerr << "Entered less than 5 numbers." << std::endl;
            }
        }
        else
        {
            if (currentIndex < 5)
            {
                arr[currentIndex] = input;
                currentIndex++;
            }
            else if (input < arr[4])
            {
                int insertIndex = 3;
                
                while (insertIndex >= 0 && arr[insertIndex] > input)
                {
                    arr[insertIndex + 1] = arr[insertIndex];
                    insertIndex--;
                }
                arr[insertIndex + 1] = input;
            }
        }
    }

   
    return 0;
}